upstream api {
    server ntuh:8086;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name  _;

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    ssl_certificate      /etc/nginx/certs/nuwarobotics_com.pem;
    ssl_certificate_key  /etc/nginx/certs/nuwarobotics_com.key;

    resolver 127.0.0.11 valid=30s ipv6=off;
    client_max_body_size 5000M;
    client_body_buffer_size 10M;
    send_timeout 300s;
    large_client_header_buffers 4 16k;
    proxy_buffer_size 64k;
    proxy_buffers 32 32k;
    proxy_busy_buffers_size 128k;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_send_timeout 300s;
    proxy_read_timeout 3000s;
    proxy_connect_timeout 30s;
    proxy_set_header Host $host;
    proxy_set_header X-Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    underscores_in_headers on;

    location ^~ /v1/workflow {
        set $origin $http_origin;
        if ($request_method = OPTIONS ) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            add_header 'Access-Control-Allow-Origin' "$origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            return 204;
        }
        if ($request_method ~ '(GET|POST|PATCH|PUT|DELETE)') {
            add_header Access-Control-Allow-Origin "$origin" always;
            add_header Access-Control-Allow-Methods 'GET, POST, PATCH, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Content-Type, Accept, Authorization' always;
            add_header Access-Control-Allow-Credentials true always;
        }
        proxy_pass http://api;
    }
    location / {
        root /usr/share/nginx/html;
    }
}
